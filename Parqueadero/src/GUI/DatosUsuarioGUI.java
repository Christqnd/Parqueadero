/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.CampusNoExisteException;
import DAO.UsuarioNoExisteException;
import DAO.UsuarioRepetidoException;
import MODELO.Campus;
import MODELO.Parqueadero;
import MODELO.Puerta;
import MODELO.Usuario;
import SERVICIO.CampusSERVICIO;
import SERVICIO.DatoInvalidoException;
import SERVICIO.FacturaExistenteException;
import SERVICIO.FechasErroneasException;
import SERVICIO.UsuarioSERVICIO;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import org.josql.QueryExecutionException;
import org.josql.QueryParseException;

/**
 *
 * @author gube
 */
public class DatosUsuarioGUI extends javax.swing.JFrame {

    /**
     * Creates new form DatosUsuarioGUI
     */
    CampusSERVICIO cs = CampusSERVICIO.getInstancia();

    UsuarioSERVICIO us = new UsuarioSERVICIO();

    private DefaultTableModel modeloCampus;
    private DefaultTableModel modeloParqueadero;
    private DefaultTableModel modeloPuertasSeleccionadas;
    private DefaultTableModel modeloPuertas;
    private DefaultTableModel modeloUsuarios;
    private DefaultTableModel modeloCampusSeleccionados;
    private DefaultTableModel modeloParqueaderosSeleccionado;
    private String codigoCampus = "";
    private String codigoParqueadero = "";
    private String modo = "";

    public DatosUsuarioGUI() {
        try {
            initComponents();
            setIconImage(new ImageIcon(getClass().getResource("/IMG/parking.png")).getImage());
            this.setLocationRelativeTo(null);
            //generamos los 3 botones checkbox
            tipoUsuario.add(docenteRB);
            tipoUsuario.add(estudianteRB);
            tipoUsuario.add(empleadoRB);
            //colocamos lo iconos de nuestro programa
            this.setLocationRelativeTo(null);
            DatosCampus.setLocationRelativeTo(null);
            DatosCampus.setIconImage(new ImageIcon(getClass().getResource("/IMG/parking.png")).getImage());
            DatosPersonalesUsuario.setLocationRelativeTo(null);
            DatosPersonalesUsuario.setIconImage(new ImageIcon(getClass().getResource("/IMG/parking.png")).getImage());
            /// Generamos los modelos de cada tabla
            modeloCampus = (DefaultTableModel) listarCampus.getModel();
            modeloParqueadero = (DefaultTableModel) listarParqueadero.getModel();
            modeloPuertasSeleccionadas = (DefaultTableModel) listarPuertasSeleccionadas.getModel();
            modeloPuertas = (DefaultTableModel) listarPuertas.getModel();
            modeloUsuarios = (DefaultTableModel) listarUsuarios.getModel();
            modeloCampusSeleccionados = (DefaultTableModel) listarCampusSeleccionados.getModel();

            mostrarDatosUsuarios();
            alinearDatos(listarCampus, listarCampus.getColumnCount());
            alinearDatos(listarParqueadero, listarParqueadero.getColumnCount());
            alinearDatos(listarPuertasSeleccionadas, listarPuertasSeleccionadas.getColumnCount());
            alinearDatos(listarPuertas, listarPuertas.getColumnCount());
            alinearDatos(listarUsuarios, listarUsuarios.getColumnCount());
            alinearDatos(listarCampusSeleccionados, listarCampusSeleccionados.getColumnCount());

        } catch (UsuarioNoExisteException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (QueryExecutionException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryParseException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipoUsuario = new javax.swing.ButtonGroup();
        DatosCampus = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listarCampus = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listarParqueadero = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        listarPuertas = new javax.swing.JTable();
        cancelarBTN = new javax.swing.JButton();
        aceptarBTN = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        DatosPersonalesUsuario = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nombresUsuarioTXT = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        apellidosUsuarioTXT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cedulaUsuarioTXT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        telefonUsuarioTXT = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        fechaNacimientoTXT = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        placaVehiculoTXT = new javax.swing.JTextField();
        marcaVehiculoTXT = new javax.swing.JTextField();
        modeloVehiculoTXT = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        docenteRB = new javax.swing.JRadioButton();
        estudianteRB = new javax.swing.JRadioButton();
        empleadoRB = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        listarCampusSeleccionados = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listarPuertasSeleccionadas = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        listarUsuarios = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();

        DatosCampus.setResizable(false);
        DatosCampus.setSize(new java.awt.Dimension(560, 658));
        DatosCampus.getContentPane().setLayout(null);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), " Universida De Cuenca", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel6.setOpaque(false);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Campus", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel8.setForeground(new java.awt.Color(255, 255, 255));
        jPanel8.setOpaque(false);

        listarCampus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "N° Puertas", "N° Parqueadero  "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listarCampus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listarCampusMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listarCampus);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Parqueadero", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel9.setOpaque(false);

        listarParqueadero.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "N° de Parqueadero", "Capacidad", "Restantes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listarParqueadero.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listarParqueaderoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listarParqueadero);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
        );

        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Seleccione el campus y el parqueadero");

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Puertas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel11.setOpaque(false);

        listarPuertas.setBackground(new java.awt.Color(204, 204, 204));
        listarPuertas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Numero", "Tipo", "Ubicación", "Portero"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listarPuertas.setEnabled(false);
        jScrollPane5.setViewportView(listarPuertas);

        cancelarBTN.setText(" Cancelar");
        cancelarBTN.setOpaque(false);
        cancelarBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBTNActionPerformed(evt);
            }
        });

        aceptarBTN.setText("Aceptar");
        aceptarBTN.setOpaque(false);
        aceptarBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(aceptarBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelarBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarBTN)
                    .addComponent(aceptarBTN)))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(325, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        DatosCampus.getContentPane().add(jPanel6);
        jPanel6.setBounds(10, 20, 530, 600);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/fondo3.png"))); // NOI18N
        DatosCampus.getContentPane().add(jLabel11);
        jLabel11.setBounds(-10, -10, 560, 650);

        DatosPersonalesUsuario.setSize(new java.awt.Dimension(880, 400));
        DatosPersonalesUsuario.getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setOpaque(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Campus/Parqueadero", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setOpaque(false);

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Nombres :");
        jLabel2.setOpaque(true);

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Apellidos :");
        jLabel3.setOpaque(true);

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Cedula:");
        jLabel4.setOpaque(true);

        jLabel5.setBackground(new java.awt.Color(204, 204, 204));
        jLabel5.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Telefono: ");
        jLabel5.setOpaque(true);

        jLabel12.setBackground(new java.awt.Color(204, 204, 204));
        jLabel12.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Fecha de nacimiento : ");
        jLabel12.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(apellidosUsuarioTXT)
                    .addComponent(nombresUsuarioTXT)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cedulaUsuarioTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(telefonUsuarioTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fechaNacimientoTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(nombresUsuarioTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(apellidosUsuarioTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(cedulaUsuarioTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(telefonUsuarioTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel12)
                    .addComponent(fechaNacimientoTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jButton1.setText("Aceptar");
        jButton1.setToolTipText("Para crear un usuario debe seleccionar al menos un parqueadero");
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Campus/Parqueadero", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setOpaque(false);

        jLabel6.setBackground(new java.awt.Color(204, 204, 204));
        jLabel6.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Placa: ");
        jLabel6.setOpaque(true);

        jLabel7.setBackground(new java.awt.Color(204, 204, 204));
        jLabel7.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Marca: ");
        jLabel7.setOpaque(true);

        jLabel8.setBackground(new java.awt.Color(204, 204, 204));
        jLabel8.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Modelo: ");
        jLabel8.setOpaque(true);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(placaVehiculoTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(marcaVehiculoTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modeloVehiculoTXT))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6)
                    .addComponent(placaVehiculoTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel7)
                    .addComponent(marcaVehiculoTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel8)
                    .addComponent(modeloVehiculoTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setText("Cancelar");
        jButton2.setOpaque(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Campus/Parqueadero", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel4.setOpaque(false);

        docenteRB.setBackground(new java.awt.Color(204, 204, 204));
        docenteRB.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        docenteRB.setForeground(new java.awt.Color(255, 255, 255));
        docenteRB.setText("Docente");

        estudianteRB.setBackground(new java.awt.Color(204, 204, 204));
        estudianteRB.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        estudianteRB.setForeground(new java.awt.Color(255, 255, 255));
        estudianteRB.setText("Estudiante");

        empleadoRB.setBackground(new java.awt.Color(204, 204, 204));
        empleadoRB.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        empleadoRB.setForeground(new java.awt.Color(255, 255, 255));
        empleadoRB.setText("Empleado");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(docenteRB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(estudianteRB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(empleadoRB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(docenteRB)
                .addGap(3, 3, 3)
                .addComponent(estudianteRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(empleadoRB)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Campus/Parqueadero", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel5.setOpaque(false);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Campus/Parqueadero", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel12.setOpaque(false);

        listarCampusSeleccionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod - Campus", "Nom - Campus", "Cod - Parq..", "Num - Parq.."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listarCampusSeleccionados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listarCampusSeleccionadosMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(listarCampusSeleccionados);
        if (listarCampusSeleccionados.getColumnModel().getColumnCount() > 0) {
            listarCampusSeleccionados.getColumnModel().getColumn(0).setResizable(false);
            listarCampusSeleccionados.getColumnModel().getColumn(1).setResizable(false);
            listarCampusSeleccionados.getColumnModel().getColumn(2).setResizable(false);
            listarCampusSeleccionados.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
        );

        jButton3.setText("Agregar");
        jButton3.setOpaque(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton8.setText("Limpiar");
        jButton8.setOpaque(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Campus/Parqueadero", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel7.setOpaque(false);

        listarPuertasSeleccionadas.setBackground(new java.awt.Color(204, 204, 204));
        listarPuertasSeleccionadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "Tipo", "Ubicación", "Portero"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listarPuertasSeleccionadas.setToolTipText("seleccione un campus para ver la informacion de las puertas disponibles");
        listarPuertasSeleccionadas.setEnabled(false);
        jScrollPane2.setViewportView(listarPuertasSeleccionadas);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setText("Seleccione para ver mas detalles de lugar");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jButton8))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton1)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        DatosPersonalesUsuario.getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 11, 830, 340);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/fondo3.png"))); // NOI18N
        DatosPersonalesUsuario.getContentPane().add(jLabel13);
        jLabel13.setBounds(-10, -10, 910, 400);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(940, 490));
        setMinimumSize(new java.awt.Dimension(940, 490));
        setPreferredSize(new java.awt.Dimension(940, 490));
        setSize(new java.awt.Dimension(940, 490));
        getContentPane().setLayout(null);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255)), "Usuarios Almacenados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));
        jPanel10.setOpaque(false);

        jButton4.setText("Agregar");
        jButton4.setOpaque(false);
        jButton4.setPreferredSize(new java.awt.Dimension(69, 23));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Modificar");
        jButton5.setOpaque(false);
        jButton5.setPreferredSize(new java.awt.Dimension(69, 23));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Eliminar");
        jButton6.setOpaque(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Salir");
        jButton7.setOpaque(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        listarUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cedúla", "Nombres", "Apellidos", "Telefono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listarUsuarios.setOpaque(false);
        listarUsuarios.getTableHeader().setResizingAllowed(false);
        listarUsuarios.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(listarUsuarios);
        if (listarUsuarios.getColumnModel().getColumnCount() > 0) {
            listarUsuarios.getColumnModel().getColumn(0).setMinWidth(75);
            listarUsuarios.getColumnModel().getColumn(0).setMaxWidth(75);
            listarUsuarios.getColumnModel().getColumn(1).setResizable(false);
            listarUsuarios.getColumnModel().getColumn(2).setResizable(false);
            listarUsuarios.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 834, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6)
                    .addComponent(jButton7)))
        );

        getContentPane().add(jPanel10);
        jPanel10.setBounds(20, 10, 880, 420);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/fondo3.png"))); // NOI18N
        getContentPane().add(jLabel10);
        jLabel10.setBounds(-10, -10, 940, 470);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DatosPersonalesUsuario.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            //guardamos el usuario dependiendo el modo en el que hayamos entrado
            String nombres = nombresUsuarioTXT.getText();
            String apellidos = apellidosUsuarioTXT.getText();
            String cedula = cedulaUsuarioTXT.getText();
            String telefono = telefonUsuarioTXT.getText();
            String placa = placaVehiculoTXT.getText();
            String modelo = modeloVehiculoTXT.getText();
            String marca = marcaVehiculoTXT.getText();

            us.guardarUsuario(nombres, apellidos, cedula, telefono, placa, modelo, marca, tipoUsuario(), modo);
            DatosPersonalesUsuario.setVisible(false);
            guardarCodigosCampusParqueaderos(cedula);
            JOptionPane.showMessageDialog(this, "Usuario Registrado Exitosamente");
            //extrae del cuadro de pantalla y carga en usuarios
            LimpiarTablaUsuarios();
            mostrarDatosUsuarios();
        } catch (DatoInvalidoException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (UsuarioRepetidoException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (QueryParseException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryExecutionException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UsuarioNoExisteException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FacturaExistenteException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FechasErroneasException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (CampusNoExisteException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            mostrarDatosCampuces();
            LimpiarTablaParqueadero();
            LimpiarTablaPuertas();
            this.DatosCampus.setVisible(true);
        } catch (QueryExecutionException | QueryParseException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void listarCampusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listarCampusMouseClicked
        try {
            int fila = listarCampus.rowAtPoint(evt.getPoint());
            LimpiarTablaParqueadero();
            LimpiarTablaPuertas();
            codigoCampus = (String) listarCampus.getValueAt(fila, 0);
            System.out.println("cod cam: " + codigoCampus);
            mostrarDatosParqueaderos(cs.recuperarCampus(codigoCampus));
        } catch (CampusNoExisteException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryParseException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryExecutionException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_listarCampusMouseClicked

    private void listarParqueaderoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listarParqueaderoMouseClicked
        try {
            int fila = listarParqueadero.rowAtPoint(evt.getPoint());
            codigoParqueadero = (String) listarParqueadero.getValueAt(fila, 0);
            System.out.println("cod par: " + codigoParqueadero);
            cargarListaDePuertas(cs.recuperarParqueaderoDeCampus(codigoCampus, codigoParqueadero).getPuertas());
        } catch (CampusNoExisteException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryParseException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryExecutionException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listarParqueaderoMouseClicked

    private void aceptarBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarBTNActionPerformed
        if (listarCampus.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Para continuar debe seleccionar algún campues y algun parqueadero");
        } else if (listarParqueadero.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Para continuar debe seleccionar algun parqueadero");
        } else if (verificarSeleccion(codigoCampus, codigoParqueadero)) {
            try {
                LimpiarTablaPuertasSeleccionadas();
                Campus campus = cs.recuperarCampus(codigoCampus);
                Parqueadero parqueadero = cs.recuperarParqueaderoDeCampus(codigoCampus, codigoParqueadero);
                modeloCampusSeleccionados.addRow(new Object[]{campus.getCodigo(), campus.getNombre(), parqueadero.getCodigo(), parqueadero.getNumero()});
                DatosCampus.setVisible(false);
            } catch (CampusNoExisteException ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (QueryParseException ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (QueryExecutionException ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ya existe un parqueadero y campues seleccionados");
        }
    }//GEN-LAST:event_aceptarBTNActionPerformed
    private void cancelarBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBTNActionPerformed
        DatosCampus.setVisible(false);
    }//GEN-LAST:event_cancelarBTNActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        modo = "c";
        cedulaUsuarioTXT.setEnabled(true);
        DatosPersonalesUsuario.setVisible(true);
        LimpiarDatosPersonalesUsuario();
        LimpiarTablaCampucesSeleccionados();
        LimpiarTablaPuertasSeleccionadas();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        this.setVisible(false);
        ParqueaderoMAINGUI pmg = new ParqueaderoMAINGUI();
        pmg.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (listarUsuarios.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Para modificar debe seleccionar algun usuario de la tabla");
        } else {
            try {
                //parametro para definir en que modo guardamos el usuario (modo create="c"; modo update="m" )
                modo = "m";
                ////////Nodificar Usuario///////////////
                //recuperamos datos de usuario
                LimpiarDatosPersonalesUsuario();
                LimpiarTablaCampucesSeleccionados();
                LimpiarTablaPuertasSeleccionadas();
                DatosPersonalesUsuario.setVisible(true);
                int fila = listarUsuarios.getSelectedRow();
                String cedulaUsuario = (String) listarUsuarios.getValueAt(fila, 0);
                Usuario usuario = us.recuperarUsuario(cedulaUsuario);
                nombresUsuarioTXT.setText(usuario.getNombre());
                apellidosUsuarioTXT.setText(usuario.getApellido());
                cedulaUsuarioTXT.setText(cedulaUsuario);
                telefonUsuarioTXT.setText(usuario.getTelefono());
                placaVehiculoTXT.setText(usuario.getVehiculo().getPlaca());
                modeloVehiculoTXT.setText(usuario.getVehiculo().getModelo());
                marcaVehiculoTXT.setText(usuario.getVehiculo().getMarca());
                limpiarDatosUsuario();
                cargarDatosUsuario(usuario.getTarjeta().getPermisos());
                DatosCampus.setVisible(false);
                cedulaUsuarioTXT.setEnabled(false);
            } catch (QueryParseException ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (QueryExecutionException ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UsuarioNoExisteException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } catch (CampusNoExisteException ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (listarUsuarios.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Para eliminar debe seleccionar algun usuario de la tabla");
        } else {
            try {
                String cedulaUsuario = (String) listarUsuarios.getValueAt(listarUsuarios.getSelectedRow(), 0);
                if (us.eliminarUsuario(cedulaUsuario)) {
                    JOptionPane.showMessageDialog(this, "Usuario eliminado exitosamente");
                    mostrarDatosUsuarios();
                }
            } catch (QueryParseException ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (QueryExecutionException ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UsuarioNoExisteException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void listarCampusSeleccionadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listarCampusSeleccionadosMouseClicked
        try {
            int fila = listarCampusSeleccionados.rowAtPoint(evt.getPoint());
            String codigoC = (String) listarCampusSeleccionados.getValueAt(fila, 0);
            String codigoP = (String) listarCampusSeleccionados.getValueAt(fila, 2);
            cargarListaDePuertasSeleccionadas(cs.recuperarParqueaderoDeCampus(codigoC, codigoP).getPuertas());
//            System.out.println("cod par: " + codigoParqueadero);
        } catch (CampusNoExisteException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryParseException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryExecutionException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listarCampusSeleccionadosMouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        LimpiarTablaCampucesSeleccionados();
        LimpiarTablaPuertasSeleccionadas();
    }//GEN-LAST:event_jButton8ActionPerformed
    private String tipoUsuario() {
        String tipo = "";
        if (docenteRB.isSelected()) {
            tipo = "Docente";
        }
        if (estudianteRB.isSelected()) {
            tipo = "Estudiante";
        }
        if (empleadoRB.isSelected()) {
            tipo = "Empleado";
        }
        return tipo;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatosUsuarioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatosUsuarioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatosUsuarioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatosUsuarioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatosUsuarioGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog DatosCampus;
    private javax.swing.JDialog DatosPersonalesUsuario;
    private javax.swing.JButton aceptarBTN;
    private javax.swing.JTextField apellidosUsuarioTXT;
    private javax.swing.JButton cancelarBTN;
    private javax.swing.JTextField cedulaUsuarioTXT;
    private javax.swing.JRadioButton docenteRB;
    private javax.swing.JRadioButton empleadoRB;
    private javax.swing.JRadioButton estudianteRB;
    private javax.swing.JTextField fechaNacimientoTXT;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable listarCampus;
    private javax.swing.JTable listarCampusSeleccionados;
    private javax.swing.JTable listarParqueadero;
    private javax.swing.JTable listarPuertas;
    private javax.swing.JTable listarPuertasSeleccionadas;
    private javax.swing.JTable listarUsuarios;
    private javax.swing.JTextField marcaVehiculoTXT;
    private javax.swing.JTextField modeloVehiculoTXT;
    private javax.swing.JTextField nombresUsuarioTXT;
    private javax.swing.JTextField placaVehiculoTXT;
    private javax.swing.JTextField telefonUsuarioTXT;
    private javax.swing.ButtonGroup tipoUsuario;
    // End of variables declaration//GEN-END:variables

    private void mostrarDatosUsuarios() throws UsuarioNoExisteException, QueryExecutionException, QueryParseException {
        LimpiarTablaUsuarios();
        List<Usuario> lista = us.recuperarUsuarios();
        for (int i = 0; i < lista.size(); i++) {
            modeloUsuarios.addRow(new Object[]{lista.get(i).getCedula(), lista.get(i).getNombre(), lista.get(i).getApellido(), lista.get(i).getTelefono()});
        }
    }

    private void mostrarDatosCampuces() throws QueryExecutionException, QueryParseException {
        LimpiarTablaCampuces();
        LimpiarTablaParqueadero();
        List<Campus> lista = new ArrayList();
        lista = cs.obtenerlistaCampus();
        for (int i = 0; i < lista.size(); i++) {
            modeloCampus.addRow(new Object[]{lista.get(i).getCodigo(), lista.get(i).getNombre(), lista.get(i).getCant_puertas(), lista.get(i).getParqueaderos().size()});
        }
    }

    private void mostrarDatosParqueaderos(Campus campus) {
        if (!campus.getParqueaderos().isEmpty()) {
            for (Map.Entry<String, Parqueadero> conjunto : campus.getParqueaderos().entrySet()) {
                String key = conjunto.getKey();
                Parqueadero value = conjunto.getValue();
                modeloParqueadero.addRow(new Object[]{key, value.getNumero(), value.getCapacidad(), value.getCapacidad() - value.getOcupados()});
            }
        }
    }

    private void LimpiarTablaParqueadero() {
        int b = modeloParqueadero.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            modeloParqueadero.removeRow(i);
        }
    }

    private void cargarListaDePuertasSeleccionadas(List<Puerta> puertas) {
        LimpiarTablaPuertasSeleccionadas();
        for (Puerta puerta : puertas) {
            modeloPuertasSeleccionadas.addRow(new Object[]{puerta.getNumero(), puerta.getTipoDePuerta().estadoPuerta(), puerta.getUbicacion(), puerta.getPortero() == null ? " --- " : puerta.getPortero().getNombre() + " " + puerta.getPortero().getApellido()});
        }
    }

    private void LimpiarTablaPuertasSeleccionadas() {
        int b = modeloPuertasSeleccionadas.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            modeloPuertasSeleccionadas.removeRow(i);
        }
    }

    private void LimpiarTablaUsuarios() {
        int b = modeloUsuarios.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            modeloUsuarios.removeRow(i);
        }
    }

    private void cargarListaDePuertas(List<Puerta> puertas) {
        LimpiarTablaPuertas();
        for (Puerta puerta : puertas) {
            modeloPuertas.addRow(new Object[]{puerta.getCodigo(), puerta.getNumero(), puerta.getTipoDePuerta().estadoPuerta(), puerta.getUbicacion(), puerta.getPortero() == null ? " --- " : puerta.getPortero().getNombre() + " " + puerta.getPortero().getApellido()});
        }
    }

    private void LimpiarTablaPuertas() {
        int b = modeloPuertas.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            modeloPuertas.removeRow(i);
        }
    }

    private void LimpiarTablaCampuces() {
        int b = modeloCampus.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            modeloCampus.removeRow(i);
        }
    }

    private void LimpiarTablaCampucesSeleccionados() {
        int b = modeloCampusSeleccionados.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            modeloCampusSeleccionados.removeRow(i);
        }
    }

    private boolean verificarSeleccion(String codigoCampus, String codigoParqueadero) {
        int b = modeloCampusSeleccionados.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            if (modeloCampusSeleccionados.getValueAt(i, 0).equals(codigoCampus) && modeloCampusSeleccionados.getValueAt(i, 2).equals(codigoParqueadero)) {
                return false;
            }
        }
        return true;
    }

    private void LimpiarDatosPersonalesUsuario() {
        nombresUsuarioTXT.setText("");
        apellidosUsuarioTXT.setText("");
        cedulaUsuarioTXT.setText("");
        telefonUsuarioTXT.setText("");
        placaVehiculoTXT.setText("");
        marcaVehiculoTXT.setText("");
        modeloVehiculoTXT.setText("");
        tipoUsuario.clearSelection();
        LimpiarTablaCampucesSeleccionados();
    }

    private void guardarCodigosCampusParqueaderos(String cedula) throws QueryParseException, QueryExecutionException, UsuarioNoExisteException, CampusNoExisteException {
        int b = modeloCampusSeleccionados.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            us.agregarCampusParqueadero(cedula, (String) modeloCampusSeleccionados.getValueAt(i, 0), (String) modeloCampusSeleccionados.getValueAt(i, 2));
        }
    }

    private void cargarDatosUsuario(Map<String, List<String>> mapa) throws CampusNoExisteException, QueryParseException, QueryExecutionException {
        for (Map.Entry<String, List<String>> conjunto : mapa.entrySet()) {
            String key = conjunto.getKey();
            List<String> value = conjunto.getValue();
            for (int i = 0; i < value.size(); i++) {
                modeloCampusSeleccionados.addRow(new Object[]{cs.recuperarCampus(key).getCodigo(), cs.recuperarCampus(key).getNombre(), cs.recuperarParqueaderoDeCampus(key, value.get(i)).getCodigo(), cs.recuperarParqueaderoDeCampus(key, value.get(i)).getNumero()});
            }
        }
    }

    private void limpiarDatosUsuario() {
        int b = modeloCampusSeleccionados.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            modeloCampusSeleccionados.removeRow(i);
        }
    }

    private void alinearDatos(JTable tabla, int numeroColumnas) {
        DefaultTableCellRenderer AlinearDatos = new DefaultTableCellRenderer();
        AlinearDatos.setHorizontalAlignment(SwingConstants.CENTER);//.LEFT .RIGHT .CENTER

        DefaultTableCellRenderer AlinearHeader = new DefaultTableCellRenderer();
        AlinearHeader.setHorizontalAlignment(SwingConstants.CENTER);//.LEFT .RIGHT .CENTER
        AlinearHeader.setVerticalAlignment(SwingConstants.CENTER);
        AlinearHeader.setBackground(Color.LIGHT_GRAY);
        AlinearHeader.setForeground(Color.white);
        JTableHeader header = tabla.getTableHeader();
        header.setDefaultRenderer(AlinearHeader);
        tabla.setTableHeader(header);
        for (int i = 0; i < numeroColumnas; i++) {
            tabla.getColumnModel().getColumn(i).setCellRenderer(AlinearDatos);
        }
    }

}
