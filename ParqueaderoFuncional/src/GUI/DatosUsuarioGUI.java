/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DATO.EmpresaNoExisteException;
import DATO.UsuarioNoExisteException;
import DATO.UsuarioRepetidoException;
import MODELO.Empresa;
import MODELO.Parqueadero;
import MODELO.Puerta;
import MODELO.Usuario;
import MODELO.Vehiculo;
import SERVICIO.EmpresaSERVICIO;
import SERVICIO.DatoInvalidoException;
import SERVICIO.FacturaExistenteException;
import SERVICIO.FechasErroneasException;
import SERVICIO.UsuarioSERVICIO;
import SERVICIO.VehiculoSERVICIO;
import java.awt.Color;
import java.awt.Font;
import java.awt.Point;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import org.josql.QueryExecutionException;
import org.josql.QueryParseException;

/**
 *
 * @author gube
 */
public class DatosUsuarioGUI extends javax.swing.JFrame {

    /**
     * Creates new form DatosUsuarioGUI
     */
    private static final String STRING_EMPTY = "";

    EmpresaSERVICIO cs = EmpresaSERVICIO.getInstancia();

    UsuarioSERVICIO us = new UsuarioSERVICIO();

    VehiculoSERVICIO vs = new VehiculoSERVICIO();

    private DefaultTableModel modeloCampus;
    private DefaultTableModel modeloParqueadero;
    private DefaultTableModel modeloPuertasSeleccionadas;
    private DefaultTableModel modeloPuertas;
    private DefaultTableModel modeloUsuarios;
    private DefaultTableModel modeloCampusSeleccionados;
    private DefaultTableModel modeloParqueaderosSeleccionado;
    private DefaultTableModel modeloVehiculoUsuario;
    private String codigoCampus = STRING_EMPTY;
    private String codigoParqueadero = STRING_EMPTY;
    private String modo = STRING_EMPTY;

    public DatosUsuarioGUI() {
        try {
            initComponents();
            inicializarCampos();
            setIconImage(new ImageIcon(getClass().getResource("/IMG/parking.png")).getImage());
            this.setLocationRelativeTo(null);
            //generamos los 3 botones checkbox
//            tipoUsuario.add(docenteRB);
//            tipoUsuario.add(estudianteRB);
//            tipoUsuario.add(empleadoRB);
            //colocamos lo iconos de nuestro programa
            this.setLocationRelativeTo(null);
            DatosCampus.setLocationRelativeTo(null);
            DatosCampus.setIconImage(new ImageIcon(getClass().getResource("/IMG/parking.png")).getImage());
            DatosPersonalesUsuario.setLocationRelativeTo(null);
            DatosPersonalesUsuario.setIconImage(new ImageIcon(getClass().getResource("/IMG/parking.png")).getImage());
            /// Generamos los modelos de cada tabla
            modeloCampus = (DefaultTableModel) listarCampus.getModel();
            modeloParqueadero = (DefaultTableModel) listarParqueadero.getModel();
//            modeloPuertasSeleccionadas = (DefaultTableModel) listarPuertasSeleccionadas.getModel();
            modeloPuertas = (DefaultTableModel) listarPuertas.getModel();
            modeloUsuarios = (DefaultTableModel) jtblistaUsuarios.getModel();
//            modeloCampusSeleccionados = (DefaultTableModel) listarCampus.getModel();
            modeloVehiculoUsuario = (DefaultTableModel) jtblistaVehiculosUsuario.getModel();

            mostrarDatosUsuarios();
//            alinearDatos(listarCampus, listarCampus.getColumnCount());
//            alinearDatos(listarParqueadero, listarParqueadero.getColumnCount());
//            alinearDatos(listarPuertasSeleccionadas, listarPuertasSeleccionadas.getColumnCount());
//            alinearDatos(listarPuertas, listarPuertas.getColumnCount());
            alinearDatos(jtblistaUsuarios, jtblistaUsuarios.getColumnCount());
//            alinearDatos(listarCampusSeleccionados, listarCampusSeleccionados.getColumnCount());
            alinearDatos(jtblistaVehiculosUsuario, jtblistaVehiculosUsuario.getColumnCount());

        } catch (UsuarioNoExisteException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (QueryExecutionException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryParseException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipoUsuario = new javax.swing.ButtonGroup();
        DatosCampus = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listarCampus = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listarParqueadero = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        listarPuertas = new javax.swing.JTable();
        cancelarBTN = new javax.swing.JButton();
        aceptarBTN = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        DatosPersonalesUsuario = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        btnCancelarAM = new javax.swing.JButton();
        btnAceptarAgregar = new javax.swing.JButton();
        btnAceptarModificar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtPrimerNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPrimerApellido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jDatePickerFecha = new org.jdatepicker.JDatePicker();
        txtSegundoNombre = new javax.swing.JTextField();
        txtSegundoApellido = new javax.swing.JTextField();
        pnlDetallesVehiculos = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtblistaVehiculosUsuario = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPlaca = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        txtModelo = new javax.swing.JTextField();
        txtObservacion = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        btnAgregarUsuario = new javax.swing.JButton();
        btnModificarUsuario = new javax.swing.JButton();
        btnEliminarUsuario = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtblistaUsuarios = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();

        DatosCampus.setResizable(false);
        DatosCampus.setSize(new java.awt.Dimension(560, 658));
        DatosCampus.getContentPane().setLayout(null);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), " Universida De Cuenca", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel6.setOpaque(false);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Campus", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel8.setForeground(new java.awt.Color(255, 255, 255));
        jPanel8.setOpaque(false);

        listarCampus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "N° Puertas", "N° Parqueadero  "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listarCampus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listarCampusMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listarCampus);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Parqueadero", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel9.setOpaque(false);

        listarParqueadero.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "N° de Parqueadero", "Capacidad", "Restantes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listarParqueadero.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listarParqueaderoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listarParqueadero);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
        );

        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Seleccione el campus y el parqueadero");

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Puertas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel11.setOpaque(false);

        listarPuertas.setBackground(new java.awt.Color(204, 204, 204));
        listarPuertas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Numero", "Tipo", "Ubicación", "Portero"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listarPuertas.setEnabled(false);
        jScrollPane5.setViewportView(listarPuertas);

        cancelarBTN.setText(" Cancelar");
        cancelarBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBTNActionPerformed(evt);
            }
        });

        aceptarBTN.setText("Aceptar");
        aceptarBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(aceptarBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelarBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarBTN)
                    .addComponent(aceptarBTN)))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(310, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        DatosCampus.getContentPane().add(jPanel6);
        jPanel6.setBounds(10, 20, 530, 600);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/fondo3.png"))); // NOI18N
        DatosCampus.getContentPane().add(jLabel11);
        jLabel11.setBounds(-10, -10, 560, 650);

        DatosPersonalesUsuario.setMinimumSize(new java.awt.Dimension(690, 440));
        DatosPersonalesUsuario.setSize(new java.awt.Dimension(723, 500));
        DatosPersonalesUsuario.getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setLayout(null);

        btnCancelarAM.setText("Cancelar");
        btnCancelarAM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarAMActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelarAM);
        btnCancelarAM.setBounds(335, 385, 179, 22);

        btnAceptarAgregar.setText("Agregar Usuario");
        btnAceptarAgregar.setToolTipText("Para crear un usuario debe seleccionar al menos un parqueadero");
        btnAceptarAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAceptarAgregar);
        btnAceptarAgregar.setBounds(155, 385, 174, 22);

        btnAceptarModificar.setText("Actualizar Usuario");
        btnAceptarModificar.setToolTipText("Para crear un usuario debe seleccionar al menos un parqueadero");
        btnAceptarModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarModificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAceptarModificar);
        btnAceptarModificar.setBounds(155, 385, 174, 22);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Detalle Usuario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setOpaque(false);

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Nombres :");

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Apellidos :");

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Cedula:");

        jLabel5.setBackground(new java.awt.Color(204, 204, 204));
        jLabel5.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Telefono: ");

        jLabel12.setBackground(new java.awt.Color(204, 204, 204));
        jLabel12.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Fecha de nacimiento : ");

        jDatePickerFecha.setToolTipText("");
        jDatePickerFecha.setInheritsPopupMenu(true);
        jDatePickerFecha.setTextEditable(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDatePickerFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtPrimerNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSegundoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPrimerApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSegundoApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(txtPrimerNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtPrimerApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSegundoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSegundoApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jDatePickerFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(11, 18, 664, 99);
        jPanel2.getAccessibleContext().setAccessibleName("Usuario");

        pnlDetallesVehiculos.setBackground(new java.awt.Color(51, 51, 51));
        pnlDetallesVehiculos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Vehiculos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlDetallesVehiculos.setOpaque(false);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Vehiculos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel12.setOpaque(false);

        jtblistaVehiculosUsuario.setAutoCreateRowSorter(true);
        jtblistaVehiculosUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Placa", "Marca", "Modelo", "Observación"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblistaVehiculosUsuario.setUpdateSelectionOnSort(false);
        jtblistaVehiculosUsuario.setVerifyInputWhenFocusTarget(false);
        jtblistaVehiculosUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtblistaVehiculosUsuarioMousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(jtblistaVehiculosUsuario);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
        );

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Detalle Vehiculo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setOpaque(false);

        jLabel6.setBackground(new java.awt.Color(204, 204, 204));
        jLabel6.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Placa: ");

        jLabel7.setBackground(new java.awt.Color(204, 204, 204));
        jLabel7.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Marca: ");

        jLabel8.setBackground(new java.awt.Color(204, 204, 204));
        jLabel8.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Modelo: ");

        txtPlaca.setToolTipText("Placa de Vehiculo (ejm AXD01245)");
        txtPlaca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPlacaKeyPressed(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(204, 204, 204));
        jLabel14.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Observación:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlDetallesVehiculosLayout = new javax.swing.GroupLayout(pnlDetallesVehiculos);
        pnlDetallesVehiculos.setLayout(pnlDetallesVehiculosLayout);
        pnlDetallesVehiculosLayout.setHorizontalGroup(
            pnlDetallesVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetallesVehiculosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDetallesVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(pnlDetallesVehiculosLayout.createSequentialGroup()
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        pnlDetallesVehiculosLayout.setVerticalGroup(
            pnlDetallesVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDetallesVehiculosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDetallesVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnEliminar)
                    .addComponent(btnLimpiar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.getAccessibleContext().setAccessibleName("Vehiculo");

        jPanel1.add(pnlDetallesVehiculos);
        pnlDetallesVehiculos.setBounds(11, 123, 664, 250);

        DatosPersonalesUsuario.getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 11, 690, 440);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/fondo3.png"))); // NOI18N
        DatosPersonalesUsuario.getContentPane().add(jLabel13);
        jLabel13.setBounds(-10, -10, 730, 480);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(940, 490));
        setMinimumSize(new java.awt.Dimension(940, 490));
        setPreferredSize(new java.awt.Dimension(940, 490));
        setSize(new java.awt.Dimension(940, 490));
        getContentPane().setLayout(null);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255)), "Usuarios Almacenados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));
        jPanel10.setOpaque(false);
        jPanel10.setLayout(null);

        btnAgregarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/add-new-32x32-1214356.png"))); // NOI18N
        btnAgregarUsuario.setText("Agregar");
        btnAgregarUsuario.setPreferredSize(new java.awt.Dimension(70, 23));
        btnAgregarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarUsuarioActionPerformed(evt);
            }
        });
        jPanel10.add(btnAgregarUsuario);
        btnAgregarUsuario.setBounds(30, 365, 120, 30);

        btnModificarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/reload-32x32-1214297.png"))); // NOI18N
        btnModificarUsuario.setText("Modificar");
        btnModificarUsuario.setPreferredSize(new java.awt.Dimension(69, 23));
        btnModificarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarUsuarioActionPerformed(evt);
            }
        });
        jPanel10.add(btnModificarUsuario);
        btnModificarUsuario.setBounds(170, 365, 120, 30);

        btnEliminarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/minus-32x32-1214312.png"))); // NOI18N
        btnEliminarUsuario.setText("Eliminar");
        btnEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUsuarioActionPerformed(evt);
            }
        });
        jPanel10.add(btnEliminarUsuario);
        btnEliminarUsuario.setBounds(310, 365, 120, 30);

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/login-32x32-1214657.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel10.add(btnSalir);
        btnSalir.setBounds(780, 365, 88, 30);

        jtblistaUsuarios.setAutoCreateRowSorter(true);
        jtblistaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Cedúla", "Nombres", "Apellidos", "Telefono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblistaUsuarios.setGridColor(new java.awt.Color(255, 255, 255));
        jtblistaUsuarios.setOpaque(false);
        jtblistaUsuarios.getTableHeader().setResizingAllowed(false);
        jtblistaUsuarios.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jtblistaUsuarios);
        if (jtblistaUsuarios.getColumnModel().getColumnCount() > 0) {
            jtblistaUsuarios.getColumnModel().getColumn(0).setMinWidth(75);
            jtblistaUsuarios.getColumnModel().getColumn(0).setMaxWidth(75);
            jtblistaUsuarios.getColumnModel().getColumn(1).setResizable(false);
            jtblistaUsuarios.getColumnModel().getColumn(2).setResizable(false);
            jtblistaUsuarios.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel10.add(jScrollPane4);
        jScrollPane4.setBounds(29, 42, 834, 310);

        getContentPane().add(jPanel10);
        jPanel10.setBounds(20, 10, 880, 420);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/fondo3.png"))); // NOI18N
        getContentPane().add(jLabel10);
        jLabel10.setBounds(-10, -10, 940, 470);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarAMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarAMActionPerformed
        DatosPersonalesUsuario.setVisible(false);
        LimpiarDatosPersonalesUsuario();
    }//GEN-LAST:event_btnCancelarAMActionPerformed

    private void btnAceptarAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarAgregarActionPerformed
        try {
            //guardamos el usuario dependiendo el modo en el que hayamos entrado
            String primerNombre = txtPrimerNombre.getText();
            String segundoNombre = txtSegundoNombre.getText();
            String primerApellido = txtPrimerApellido.getText();
            String segundoApellido = txtSegundoApellido.getText();
            String cedula = txtCedula.getText();
            String telefono = txtTelefono.getText();

            LinkedList<Vehiculo> listaVehiculosDeUsuario = new LinkedList<Vehiculo>();

            int rows = modeloVehiculoUsuario.getRowCount();

            for (int i = 0; i < rows; i++) {

//                String id = modeloVehiculoUsuario.getValueAt(i,0).toString();
                String placa = modeloVehiculoUsuario.getValueAt(i, 1).toString();
                /* row , column */
                String marca = modeloVehiculoUsuario.getValueAt(i, 2).toString();
                String modelo = modeloVehiculoUsuario.getValueAt(i, 3).toString();
                String observacion = modeloVehiculoUsuario.getValueAt(i, 4).toString();

                listaVehiculosDeUsuario.add(new Vehiculo(placa, marca, modelo, observacion, "A"));

            }

            Usuario usuario = new Usuario(primerNombre, segundoNombre, primerApellido, segundoApellido, telefono, cedula, telefono, "A", listaVehiculosDeUsuario);
            us.guardarUsuario(usuario);
            DatosPersonalesUsuario.setVisible(false);
            JOptionPane.showMessageDialog(this, "Usuario Registrado Exitosamente");
            //extrae del cuadro de pantalla y carga en usuarios
            LimpiarTablaUsuarios();
            mostrarDatosUsuarios();
//        } catch (DatoInvalidoException ex) {
//            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (UsuarioRepetidoException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (QueryParseException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryExecutionException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UsuarioNoExisteException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DatoInvalidoException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Validación de Datos", JOptionPane.WARNING_MESSAGE);
//            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FacturaExistenteException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FechasErroneasException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
//        catch (FacturaExistenteException ex) {
//            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (FechasErroneasException ex) {
//            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
//        } 
//        catch (CampusNoExisteException ex) {
//            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_btnAceptarAgregarActionPerformed


    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
//        DefaultTableModel modelolistaVehiculos = (DefaultTableModel) jtblistaVehiculosUsuario.getModel();
        String placa = txtPlaca.getText().trim();
        if (placa.equals(STRING_EMPTY)) {
            JOptionPane.showMessageDialog(null, "Placa es necesaria");
            return;
        }
        String marca = txtMarca.getText().trim();
        if (marca.equals(STRING_EMPTY)) {
            JOptionPane.showMessageDialog(null, "Marca es necesaria");
            return;
        }
        String modelo = txtModelo.getText().trim();
        if (modelo.equals(STRING_EMPTY)) {
            JOptionPane.showMessageDialog(null, "Modelo es necesaria");
            return;
        }
        String observacion = txtObservacion.getText().trim();

        modeloVehiculoUsuario.addRow(new Object[]{null, placa, marca, modelo, observacion, "A"});

        txtPlaca.setText(STRING_EMPTY);
        txtMarca.setText(STRING_EMPTY);
        txtModelo.setText(STRING_EMPTY);
        txtObservacion.setText(STRING_EMPTY);

//        try {
//            mostrarDatosCampuces();
//            LimpiarTablaParqueadero();
//            LimpiarTablaPuertas();
//            this.DatosCampus.setVisible(true);
//        } catch (QueryExecutionException | QueryParseException ex) {
//            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void listarCampusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listarCampusMouseClicked
//        try {
//            int fila = listarCampus.rowAtPoint(evt.getPoint());
//            LimpiarTablaParqueadero();
//            LimpiarTablaPuertas();
//            codigoCampus = (String) listarCampus.getValueAt(fila, 0);
//            System.out.println("cod cam: " + codigoCampus);
//            mostrarDatosParqueaderos(cs.recuperarCampus(codigoCampus));
//        } catch (CampusNoExisteException ex) {
//            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (QueryParseException ex) {
//            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (QueryExecutionException ex) {
//            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
//        }

    }//GEN-LAST:event_listarCampusMouseClicked

    private void listarParqueaderoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listarParqueaderoMouseClicked
        try {
            int fila = listarParqueadero.rowAtPoint(evt.getPoint());
            codigoParqueadero = (String) listarParqueadero.getValueAt(fila, 0);
            System.out.println("cod par: " + codigoParqueadero);
            cargarListaDePuertas(cs.recuperarParqueaderoDeCampus(codigoCampus, codigoParqueadero).getPuertas());
        } catch (EmpresaNoExisteException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryParseException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryExecutionException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listarParqueaderoMouseClicked

    private void aceptarBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarBTNActionPerformed
        if (listarCampus.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Para continuar debe seleccionar algún campues y algun parqueadero");
        } else if (listarParqueadero.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Para continuar debe seleccionar algun parqueadero");
        } else if (verificarSeleccion(codigoCampus, codigoParqueadero)) {
            try {
//                LimpiarTablaPuertasSeleccionadas();
//                Campus campus = cs.recuperarCampus(codigoCampus);
//                Parqueadero parqueadero = cs.recuperarParqueaderoDeCampus(codigoCampus, codigoParqueadero);
//                modeloCampusSeleccionados.addRow(new Object[]{campus.getCodigo(), campus.getNombre(), parqueadero.getCodigo(), parqueadero.getNumero()});
                DatosCampus.setVisible(false);
//            } catch (CampusNoExisteException ex) {
//                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (QueryParseException ex) {
//                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (QueryExecutionException ex) {
//                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ya existe un parqueadero y campues seleccionados");
        }
    }//GEN-LAST:event_aceptarBTNActionPerformed
    private void cancelarBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBTNActionPerformed
        DatosCampus.setVisible(false);
    }//GEN-LAST:event_cancelarBTNActionPerformed

    private void btnAgregarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarUsuarioActionPerformed
//        modo = "c";
        LimpiarDatosPersonalesUsuario();
        jtblistaVehiculosUsuario.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtblistaVehiculosUsuario.getColumnModel().getColumn(0).setWidth(0);
        jtblistaVehiculosUsuario.getColumnModel().getColumn(0).setMaxWidth(0);
        jtblistaVehiculosUsuario.getColumnModel().getColumn(0).setMinWidth(0);
        jtblistaVehiculosUsuario.getColumnModel().getColumn(0).setResizable(false);

        txtCedula.setEnabled(true);
        DatosPersonalesUsuario.setVisible(true);
        /* Activamos boton de agregar user*/
        this.btnAceptarAgregar.setVisible(true);
        this.btnAceptarAgregar.setEnabled(true);
        this.btnAceptarModificar.setVisible(false);
        this.btnAceptarModificar.setEnabled(false);

//        LimpiarTablaCampucesSeleccionados();
//        LimpiarTablaPuertasSeleccionadas();
    }//GEN-LAST:event_btnAgregarUsuarioActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.setVisible(false);
        ParqueaderoMAINGUI pmg = new ParqueaderoMAINGUI();
        pmg.setVisible(true);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnModificarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarUsuarioActionPerformed
        if (jtblistaUsuarios.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Para modificar debe seleccionar algun usuario de la tabla");
        } else {
            try {

                DatosPersonalesUsuario.setVisible(true);
                jtblistaVehiculosUsuario.getColumnModel().getColumn(1).setPreferredWidth(1);
                LimpiarDatosPersonalesUsuario();
                int fila = jtblistaUsuarios.getSelectedRow();
                idSeleccionado = (Long) jtblistaUsuarios.getValueAt(fila, 0);
                Usuario usuario = us.recuperarUsuario(idSeleccionado);
                txtPrimerNombre.setText(usuario.getPrimerNombre());
                txtSegundoNombre.setText(usuario.getSegundoNombre());
                txtPrimerApellido.setText(usuario.getPrimerApellido());
                txtSegundoApellido.setText(usuario.getSegundoApellido());
                txtCedula.setText(usuario.getCedula());
//                txtCedula.setEnabled(false);
                txtTelefono.setText(usuario.getTelefono());
                txtPlaca.setText(STRING_EMPTY);
                txtModelo.setText(STRING_EMPTY);
                txtMarca.setText(STRING_EMPTY);

                for (Vehiculo v : usuario.getVehiculos()) {
                    this.modeloVehiculoUsuario.addRow(new Object[]{v.getId(), v.getPlaca(), v.getMarca(), v.getModelo(), v.getObservacion()});
                }

                /* Activamos boton de modificar user*/
                this.btnAceptarAgregar.setVisible(false);
                this.btnAceptarAgregar.setEnabled(false);
                this.btnAceptarModificar.setVisible(true);
                this.btnAceptarModificar.setEnabled(true);

            } catch (QueryParseException ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (QueryExecutionException ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UsuarioNoExisteException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } catch (IOException ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
//            catch (CampusNoExisteException ex) {
//                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
//            }
        }
    }//GEN-LAST:event_btnModificarUsuarioActionPerformed

    private void btnEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUsuarioActionPerformed
        if (jtblistaUsuarios.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Para eliminar debe seleccionar algún usuario de la tabla");
        } else {
            try {
                idSeleccionado = (Long) jtblistaUsuarios.getValueAt(jtblistaUsuarios.getSelectedRow(), 0);

                int fila = jtblistaUsuarios.getSelectedRow();

                Usuario usuario = us.recuperarUsuario(idSeleccionado);

                for (Vehiculo v : usuario.getVehiculos()) {
                    vs.eliminarVehiculo(v.getId());
                }

                if (us.eliminarUsuario(idSeleccionado)) {
                    JOptionPane.showMessageDialog(this, "Usuario eliminado exitosamente");

                    mostrarDatosUsuarios();
                }
            } catch (QueryParseException ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (QueryExecutionException ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UsuarioNoExisteException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } catch (IOException ex) {
                Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnEliminarUsuarioActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
//        LimpiarTablaCampucesSeleccionados();
//        LimpiarTablaPuertasSeleccionadas();
        txtMarca.setText(STRING_EMPTY);
        txtModelo.setText(STRING_EMPTY);
        txtPlaca.setText(STRING_EMPTY);
        txtObservacion.setText(STRING_EMPTY);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private LinkedList<Long> listaVehiculosDeUsuarioAEliminar = new LinkedList<Long>();

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (rowListaVehiculosUsuario >= 0) {
            String id = (modeloVehiculoUsuario.getValueAt(rowListaVehiculosUsuario, 0) == null) ? null : modeloVehiculoUsuario.getValueAt(rowListaVehiculosUsuario, 0).toString();

            if (id != null) {
                listaVehiculosDeUsuarioAEliminar.add(Long.valueOf(id));
            }
            modeloVehiculoUsuario.removeRow(rowListaVehiculosUsuario);
            txtMarca.setText(STRING_EMPTY);
            txtModelo.setText(STRING_EMPTY);
            txtPlaca.setText(STRING_EMPTY);
            txtObservacion.setText(STRING_EMPTY);
            rowListaVehiculosUsuario = -1;

        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private int rowListaVehiculosUsuario = -1;

    private void txtPlacaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlacaKeyPressed

    private void jtblistaVehiculosUsuarioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblistaVehiculosUsuarioMousePressed
        JTable table = (JTable) evt.getSource();
        Point point = evt.getPoint();
        int row = table.rowAtPoint(point);
        if (evt.getClickCount() == 2 && table.getSelectedRow() != -1) {
            txtPlaca.setText(table.getModel().getValueAt(row, 0).toString());
            txtMarca.setText(table.getModel().getValueAt(row, 1).toString());
            txtModelo.setText(table.getModel().getValueAt(row, 2).toString());
            txtObservacion.setText(table.getModel().getValueAt(row, 3).toString());
            rowListaVehiculosUsuario = row;
        }
    }//GEN-LAST:event_jtblistaVehiculosUsuarioMousePressed

    private Long idSeleccionado;

    private void btnAceptarModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarModificarActionPerformed

        try {
            //guardamos el usuario dependiendo el modo en el que hayamos entrado
            String primerNombre = txtPrimerNombre.getText();
            String segundoNombre = txtSegundoNombre.getText();
            String primerApellido = txtPrimerApellido.getText();
            String segundoApellido = txtSegundoApellido.getText();
            String cedula = txtCedula.getText();
            String telefono = txtTelefono.getText();

            LinkedList<Vehiculo> listaVehiculosDeUsuario = new LinkedList<Vehiculo>();

            int rows = modeloVehiculoUsuario.getRowCount();

            for (int i = 0; i < rows; i++) {

                String id = (modeloVehiculoUsuario.getValueAt(i, 0) == null) ? null : modeloVehiculoUsuario.getValueAt(i, 0).toString();
                String placa = modeloVehiculoUsuario.getValueAt(i, 1).toString();
                String marca = modeloVehiculoUsuario.getValueAt(i, 2).toString();
                String modelo = modeloVehiculoUsuario.getValueAt(i, 3).toString();
                String observacion = modeloVehiculoUsuario.getValueAt(i, 4).toString();

                if (id == null) {
                    listaVehiculosDeUsuario.add(new Vehiculo(placa, marca, modelo, observacion, "A", idSeleccionado));
                } else {
                    listaVehiculosDeUsuario.add(new Vehiculo(Long.valueOf(id), placa, marca, modelo, observacion, "A", idSeleccionado));
                }

            }

//            listaVehiculosDeUsuarioAEliminar;
            for (Long idVehiculo : listaVehiculosDeUsuarioAEliminar) {
                vs.eliminarVehiculo(idVehiculo);
            }
//            listaVehiculosDeUsuarioAEliminar

            Usuario usuario = new Usuario(idSeleccionado, primerNombre, segundoNombre, primerApellido, segundoApellido, telefono, cedula, telefono, "A", listaVehiculosDeUsuario);

            us.modificarUsuario(idSeleccionado, usuario);
            DatosPersonalesUsuario.setVisible(false);
            JOptionPane.showMessageDialog(this, "Usuario Modificado Exitosamente");
            //extrae del cuadro de pantalla y carga en usuarios
            LimpiarTablaUsuarios();
            mostrarDatosUsuarios();
//        } catch (DatoInvalidoException ex) {
//            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (UsuarioRepetidoException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (QueryParseException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryExecutionException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UsuarioNoExisteException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DatoInvalidoException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Validación de Datos", JOptionPane.WARNING_MESSAGE);
//            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FacturaExistenteException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FechasErroneasException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(DatosUsuarioGUI.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnAceptarModificarActionPerformed
    private String tipoUsuario() {
        String tipo = "Cliente";
//        if (docenteRB.isSelected()) {
//            tipo = "Docente";
//        }
//        if (estudianteRB.isSelected()) {
//            tipo = "Estudiante";
//        }
//        if (empleadoRB.isSelected()) {
//            tipo = "Empleado";
//        }
        return tipo;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatosUsuarioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatosUsuarioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatosUsuarioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatosUsuarioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatosUsuarioGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog DatosCampus;
    private javax.swing.JDialog DatosPersonalesUsuario;
    private javax.swing.JButton aceptarBTN;
    private javax.swing.JButton btnAceptarAgregar;
    private javax.swing.JButton btnAceptarModificar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregarUsuario;
    private javax.swing.JButton btnCancelarAM;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarUsuario;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificarUsuario;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton cancelarBTN;
    private org.jdatepicker.JDatePicker jDatePickerFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jtblistaUsuarios;
    private javax.swing.JTable jtblistaVehiculosUsuario;
    private javax.swing.JTable listarCampus;
    private javax.swing.JTable listarParqueadero;
    private javax.swing.JTable listarPuertas;
    private javax.swing.JPanel pnlDetallesVehiculos;
    private javax.swing.ButtonGroup tipoUsuario;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtObservacion;
    private javax.swing.JTextField txtPlaca;
    private javax.swing.JTextField txtPrimerApellido;
    private javax.swing.JTextField txtPrimerNombre;
    private javax.swing.JTextField txtSegundoApellido;
    private javax.swing.JTextField txtSegundoNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    private void mostrarDatosUsuarios() throws UsuarioNoExisteException, QueryExecutionException, QueryParseException {
        try {
            LimpiarTablaUsuarios();
            List<Usuario> lista = us.recuperarUsuarios();
            for (int i = 0; i < lista.size(); i++) {
                modeloUsuarios.addRow(new Object[]{lista.get(i).getId(), lista.get(i).getCedula(), lista.get(i).getPrimerNombre() + " " + lista.get(i).getSegundoNombre(), lista.get(i).getPrimerApellido() + " " + lista.get(i).getSegundoApellido(), lista.get(i).getTelefono()});
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error de conexion", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void mostrarDatosCampuces() throws QueryExecutionException, QueryParseException, IOException {
        LimpiarTablaCampuces();
        LimpiarTablaParqueadero();
        List<Empresa> lista = new ArrayList();
        lista = cs.obtenerlistaCampus();
        for (int i = 0; i < lista.size(); i++) {
            modeloCampus.addRow(new Object[]{lista.get(i).getCodigo(), lista.get(i).getNombre(), lista.get(i).getCant_puertas(), lista.get(i).getParqueaderos().size()});
        }
    }

    private void mostrarDatosParqueaderos(Empresa campus) {
        if (!campus.getParqueaderos().isEmpty()) {
            for (Map.Entry<String, Parqueadero> conjunto : campus.getParqueaderos().entrySet()) {
                String key = conjunto.getKey();
                Parqueadero value = conjunto.getValue();
                modeloParqueadero.addRow(new Object[]{key, value.getNumero(), value.getCapacidad(), value.getCapacidad() - value.getOcupados()});
            }
        }
    }

    private void LimpiarTablaParqueadero() {
        int b = modeloParqueadero.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            modeloParqueadero.removeRow(i);
        }
    }

    private void cargarListaDePuertasSeleccionadas(List<Puerta> puertas) {
//        LimpiarTablaPuertasSeleccionadas();
        for (Puerta puerta : puertas) {
            modeloPuertasSeleccionadas.addRow(new Object[]{puerta.getNumero(), puerta.getTipoDePuerta().estadoPuerta(), puerta.getUbicacion(), puerta.getPortero() == null ? " --- " : puerta.getPortero().getPrimerNombre() + " " + puerta.getPortero().getSegundoApellido()});
        }
    }

//    private void LimpiarTablaPuertasSeleccionadas() {
//        int b = modeloPuertasSeleccionadas.getRowCount() - 1;  //Índices van de 0 a n-1
//        for (int i = b; i >= 0; i--) {
//            modeloPuertasSeleccionadas.removeRow(i);
//        }
//    }
    private void LimpiarTablaUsuarios() {
        int b = modeloUsuarios.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            modeloUsuarios.removeRow(i);
        }
    }

    private void cargarListaDePuertas(List<Puerta> puertas) {
        LimpiarTablaPuertas();
        for (Puerta puerta : puertas) {
            modeloPuertas.addRow(new Object[]{puerta.getCodigo(), puerta.getNumero(), puerta.getTipoDePuerta().estadoPuerta(), puerta.getUbicacion(), puerta.getPortero() == null ? " --- " : puerta.getPortero().getPrimerNombre() + " " + puerta.getPortero().getPrimerApellido()});
        }
    }

    private void LimpiarTablaPuertas() {
        int b = modeloPuertas.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            modeloPuertas.removeRow(i);
        }
    }

    private void LimpiarTablaCampuces() {
        int b = modeloCampus.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            modeloCampus.removeRow(i);
        }
    }

//    private void LimpiarTablaCampucesSeleccionados() {
//        int b = modeloCampusSeleccionados.getRowCount() - 1;  //Índices van de 0 a n-1
//        for (int i = b; i >= 0; i--) {
//            modeloCampusSeleccionados.removeRow(i);
//        }
//    }
    private boolean verificarSeleccion(String codigoCampus, String codigoParqueadero) {
        int b = modeloCampusSeleccionados.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            if (modeloCampusSeleccionados.getValueAt(i, 0).equals(codigoCampus) && modeloCampusSeleccionados.getValueAt(i, 2).equals(codigoParqueadero)) {
                return false;
            }
        }
        return true;
    }

    private void LimpiarDatosPersonalesUsuario() {
        listaVehiculosDeUsuarioAEliminar = new LinkedList<Long>();
        txtPrimerNombre.setText(STRING_EMPTY);
        txtPrimerApellido.setText(STRING_EMPTY);
        txtSegundoNombre.setText(STRING_EMPTY);
        txtSegundoApellido.setText(STRING_EMPTY);
        txtCedula.setText(STRING_EMPTY);
        txtTelefono.setText(STRING_EMPTY);
        txtPlaca.setText(STRING_EMPTY);
        txtMarca.setText(STRING_EMPTY);
        txtModelo.setText(STRING_EMPTY);
        txtObservacion.setText(STRING_EMPTY);
        tipoUsuario.clearSelection();
        limpiarDatosUsuario();
        rowListaVehiculosUsuario = -1;
    }

    private void guardarCodigosCampusParqueaderos(String cedula) throws QueryParseException, QueryExecutionException, UsuarioNoExisteException, EmpresaNoExisteException {
        int b = modeloCampusSeleccionados.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            us.agregarCampusParqueadero(cedula, (String) modeloCampusSeleccionados.getValueAt(i, 0), (String) modeloCampusSeleccionados.getValueAt(i, 2));
        }
    }

    private void cargarDatosUsuario(Map<String, List<String>> mapa) throws EmpresaNoExisteException, QueryParseException, QueryExecutionException {
        for (Map.Entry<String, List<String>> conjunto : mapa.entrySet()) {
            String key = conjunto.getKey();
            List<String> value = conjunto.getValue();
            for (int i = 0; i < value.size(); i++) {
                modeloCampusSeleccionados.addRow(new Object[]{cs.recuperarCampus(key).getCodigo(), cs.recuperarCampus(key).getNombre(), cs.recuperarParqueaderoDeCampus(key, value.get(i)).getCodigo(), cs.recuperarParqueaderoDeCampus(key, value.get(i)).getNumero()});
            }
        }
    }

    private void limpiarDatosUsuario() {
        int b = modeloVehiculoUsuario.getRowCount() - 1;  //Índices van de 0 a n-1
        for (int i = b; i >= 0; i--) {
            modeloVehiculoUsuario.removeRow(i);
        }
    }

    private void alinearDatos(JTable tabla, int numeroColumnas) {
        DefaultTableCellRenderer AlinearDatos = new DefaultTableCellRenderer();
        AlinearDatos.setHorizontalAlignment(SwingConstants.CENTER);//.LEFT .RIGHT .CENTER
        DefaultTableCellRenderer AlinearHeader = new DefaultTableCellRenderer();
        AlinearHeader.setHorizontalAlignment(SwingConstants.CENTER);//.LEFT .RIGHT .CENTER
        AlinearHeader.setVerticalAlignment(SwingConstants.CENTER);
        AlinearHeader.setBackground(Color.DARK_GRAY);
        AlinearHeader.setForeground(Color.white);
        JTableHeader header = tabla.getTableHeader();
        header.setDefaultRenderer(AlinearHeader);
        tabla.setTableHeader(header);
        tabla.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        for (int i = 0; i < numeroColumnas; i++) {
            tabla.getColumnModel().getColumn(i).setCellRenderer(AlinearDatos);
        }
    }

    private void inicializarCampos() {
        txtPrimerNombre.setDocument(new JTextFieldLimit(50, "alfabetico", new char[]{' '}));
        txtSegundoNombre.setDocument(new JTextFieldLimit(50, "alfabetico", new char[]{' '}));
        txtPrimerApellido.setDocument(new JTextFieldLimit(50, "alfabetico", new char[]{' '}));
        txtSegundoApellido.setDocument(new JTextFieldLimit(50, "alfabetico", new char[]{' '}));
        txtCedula.setDocument(new JTextFieldLimit(10, "numerico"));
        txtTelefono.setDocument(new JTextFieldLimit(10, "numerico", new char[]{'+', ' '}));
        txtPlaca.setDocument(new JTextFieldLimit(10, "alfanumerico", new char[]{' ', '-'}));
        txtMarca.setDocument(new JTextFieldLimit(50, "alfanumerico", new char[]{' '}));
        txtModelo.setDocument(new JTextFieldLimit(50, "alfanumerico", new char[]{' '}));
        txtObservacion.setDocument(new JTextFieldLimit(200, "alfanumerico", new char[]{'-', '+', '*', '/', ' '}));
    }

}
