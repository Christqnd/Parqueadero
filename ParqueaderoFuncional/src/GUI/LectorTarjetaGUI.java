/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DATO.EmpresaNoExisteException;
import DATO.UsuarioNoExisteException;
import MODELO.Empresa;
import MODELO.Parqueadero;
import MODELO.Puerta;
import SERVICIO.EmpresaSERVICIO;
import SERVICIO.FacturaExistenteException;
import SERVICIO.FechasErroneasException;
import SERVICIO.TarjetaSERVICIO;
import java.io.IOException;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.josql.QueryExecutionException;
import org.josql.QueryParseException;

/**
 *
 * @author pablopc
 */
public class LectorTarjetaGUI extends javax.swing.JFrame {

    /**
     * Creates new form LectorTarjetaGUI
     */
    private TarjetaSERVICIO ts = TarjetaSERVICIO.getInstancia();
    private EmpresaSERVICIO cs = EmpresaSERVICIO.getInstancia();
    private String modoVentaja = "";

    public LectorTarjetaGUI() {
    }

    LectorTarjetaGUI(String modo) {
        try {
            initComponents();
            setIconImage(new ImageIcon(getClass().getResource("/IMG/parking.png")).getImage());
            this.setLocationRelativeTo(null);
            cargarCampus();
            modoTXT.setText("Ventana modo : " + modo);
            modoVentaja = modo;
        } catch (QueryExecutionException ex) {
            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryParseException ex) {
            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cedulaTXT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        campusCMB = new javax.swing.JComboBox();
        parqueaderoCMB = new javax.swing.JComboBox();
        puertaCBM = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        campusTXT = new javax.swing.JTextField();
        parqueaderoTXT = new javax.swing.JTextField();
        puertaTXT = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        modoTXT = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(750, 320));
        setSize(new java.awt.Dimension(750, 320));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Lector Tarjeta");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(300, 10, 90, 20);
        getContentPane().add(cedulaTXT);
        cedulaTXT.setBounds(170, 50, 240, 20);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Cedula");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(120, 50, 40, 20);

        jButton1.setForeground(new java.awt.Color(0, 51, 153));
        jButton1.setText("Verificar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(430, 50, 187, 22);

        jButton2.setForeground(new java.awt.Color(255, 51, 51));
        jButton2.setText("Atras");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(20, 240, 72, 22);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102)));
        jPanel1.setOpaque(false);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Campus : ");
        jLabel2.setOpaque(true);

        campusCMB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                campusCMBItemStateChanged(evt);
            }
        });

        parqueaderoCMB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                parqueaderoCMBItemStateChanged(evt);
            }
        });

        puertaCBM.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                puertaCBMItemStateChanged(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(204, 204, 204));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Puerta : ");
        jLabel5.setOpaque(true);

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Parqueadero : ");
        jLabel3.setOpaque(true);

        jLabel6.setBackground(new java.awt.Color(204, 204, 204));
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Codigos");
        jLabel6.setOpaque(true);

        campusTXT.setEditable(false);
        campusTXT.setBackground(new java.awt.Color(204, 204, 204));
        campusTXT.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        parqueaderoTXT.setEditable(false);
        parqueaderoTXT.setBackground(new java.awt.Color(204, 204, 204));
        parqueaderoTXT.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        puertaTXT.setEditable(false);
        puertaTXT.setBackground(new java.awt.Color(204, 204, 204));
        puertaTXT.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel7.setBackground(new java.awt.Color(204, 204, 204));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Informacion");
        jLabel7.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(puertaCBM, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(parqueaderoCMB, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campusCMB, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campusTXT, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(parqueaderoTXT)
                    .addComponent(puertaTXT))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campusCMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(campusTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parqueaderoCMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(parqueaderoTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(puertaCBM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(puertaTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 90, 693, 134);

        modoTXT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        modoTXT.setForeground(new java.awt.Color(255, 255, 255));
        modoTXT.setText("Modo : ");
        getContentPane().add(modoTXT);
        modoTXT.setBounds(10, 0, 164, 29);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/fondo3.png"))); // NOI18N
        getContentPane().add(jLabel8);
        jLabel8.setBounds(-5, -9, 740, 300);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        ParqueaderoMAINGUI pmg = new ParqueaderoMAINGUI();
        pmg.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String cedula = cedulaTXT.getText();
            String codigoCampus = (String) campusCMB.getSelectedItem();
            String codigoParqueadero = (String) parqueaderoCMB.getSelectedItem();
            String codigoPuerta = (String) puertaCBM.getSelectedItem();
            if (ts.comprovarDatos(cedula, codigoCampus, codigoParqueadero, codigoPuerta, modoVentaja)) {
                JOptionPane.showMessageDialog(this, "Proceso culminado exitoso");
                this.setVisible(false);
                ParqueaderoMAINGUI pmg=new ParqueaderoMAINGUI();
                pmg.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Datos incorrectos");
            }
            
        } catch (QueryParseException ex) {
            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryExecutionException ex) {
            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UsuarioNoExisteException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (FacturaExistenteException ex) {
            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FechasErroneasException ex) {
            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void campusCMBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_campusCMBItemStateChanged
        parqueaderoCMB.removeAllItems();
        puertaCBM.removeAllItems();
        campusTXT.setText("");
        parqueaderoTXT.setText("");
        puertaTXT.setText("");
        try {
            String codCampus = (String) campusCMB.getSelectedItem();
            Empresa campus = cs.recuperarEmpresa(codCampus);
            System.out.println("campus" + campusCMB.getSelectedItem().toString());
            campusTXT.setText(campus.getNombre());
            parqueaderoCMB.addItem("");
            for (Iterator<Parqueadero> iterator = cs.recuperarEmpresa(codCampus).getParqueaderos().iterator(); iterator.hasNext();) {
                Parqueadero next = iterator.next();
                parqueaderoCMB.addItem(next.getIdParqueadero());
            }
        } catch (EmpresaNoExisteException ex) {
//            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryParseException ex) {
            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryExecutionException ex) {
            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
        }
    }//GEN-LAST:event_campusCMBItemStateChanged

    private void parqueaderoCMBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_parqueaderoCMBItemStateChanged
        puertaCBM.removeAllItems();
        puertaTXT.setText("");
        try {
            String codCampus = (String) campusCMB.getSelectedItem();
            String codParqueadero = (String) parqueaderoCMB.getSelectedItem();
            puertaCBM.addItem("");
            Parqueadero p = cs.recuperarParqueaderoDeEmpresa(codCampus, codParqueadero);
            parqueaderoTXT.setText("Parqueadero número: " + Integer.toString(p.getNumero())+" -  Lugares disponibles: "+(p.getCapacidad()-p.getOcupados()));
            for (Iterator<Puerta> iterator = p.getPuertas().iterator(); iterator.hasNext();) {
                Puerta puerta = iterator.next();
                puertaCBM.addItem(puerta.getIdParqueadero());
            }
            System.out.println("seleccion de par: " + codParqueadero);
        } catch (EmpresaNoExisteException ex) {
//            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryParseException ex) {
            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryExecutionException ex) {
            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
        }

    }//GEN-LAST:event_parqueaderoCMBItemStateChanged

    private void puertaCBMItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_puertaCBMItemStateChanged
        try {
            String codCampus = (String) campusCMB.getSelectedItem();
            String codParqueadero = (String) parqueaderoCMB.getSelectedItem();
            String codPuerta = (String) puertaCBM.getSelectedItem();
            Puerta puerta = cs.recuperarParqueaderoDeEmpresaDePuerta(codCampus, codParqueadero, codPuerta);
            puertaTXT.setText("Número de puerta: " + puerta.getNumero()+" - Tipo: "+puerta.getTipo()+" - Descripcion: "+puerta.getDescripcion());
            System.out.println("seleccion de par: " + codParqueadero);

        } catch (EmpresaNoExisteException ex) {
//                Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryParseException ex) {
            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (QueryExecutionException ex) {
            Logger.getLogger(LectorTarjetaGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
        }

    }//GEN-LAST:event_puertaCBMItemStateChanged
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LectorTarjetaGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LectorTarjetaGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LectorTarjetaGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LectorTarjetaGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LectorTarjetaGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox campusCMB;
    private javax.swing.JTextField campusTXT;
    private javax.swing.JTextField cedulaTXT;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel modoTXT;
    private javax.swing.JComboBox parqueaderoCMB;
    private javax.swing.JTextField parqueaderoTXT;
    private javax.swing.JComboBox puertaCBM;
    private javax.swing.JTextField puertaTXT;
    // End of variables declaration//GEN-END:variables

    private void cargarCampus() throws QueryExecutionException, QueryParseException, IOException {
        campusCMB.addItem("");
        for (Iterator<Empresa> iterator = cs.obtenerlistaEmpresa().iterator(); iterator.hasNext();) {
            Empresa next = iterator.next();
            campusCMB.addItem(next.getCodigo());
        }
    }
}
